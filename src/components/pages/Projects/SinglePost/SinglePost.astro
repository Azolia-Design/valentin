---
import type { Post } from '~/types';

import Image from "~/components/common/Image.astro";
import TextBlurFading from "~/components/common/TextBlurFading";
import BreakMutipleLine from "~/components/common/BreakMutipleLine.astro";
import Arrows from "~/components/common/Arrows.astro";
import TOC from './TOC';
export interface Props {
    post: Post;
}

const { post } = Astro.props;
---
<section class="post-wrapper">
    <section class="sc-post__hero">
        <div class="post__hero">
            <div class=" grid-1-1 post__hero-cover">
                <div class="post__hero-cover-img">
                    <Image
                        src={post.image}
                        class="img"
                        widths={[400, 900, 1024, 2040]}
                        alt={post?.excerpt || ''}
                        width={1024}
                        height={620}
                        loading="eager"
                        decoding="sync"
                    />
                </div>
                <div class="post__hero-cover-blur">
                    <Image
                        src={'~/assets/images/post-blur.png'}
                        alt="background blur"
                        class="img"
                        widths={[400, 900, 1024]}
                        width={1024}
                        height={620}
                        loading="eager"
                        decoding="sync"
                    />
                </div>
            </div>
            <div class="post__hero-main">
                <div class="container grid">
                    <h1 class="heading h2 upper fw-bold cl-txt-title post__hero-title">{post.title}</h1>
                    <div class="post__hero-info">
                        <div class="post__hero-role">
                            <div class="cl-txt-desc fw-med post__hero-label">Role</div>
                            <div class="post__hero-role-listing">
                                {post.roles.map((role) => <p class="cl-txt-sub">{role.title}</p>)}
                            </div>
                        </div>
                        <div class="post__hero-service">
                            <div class="cl-txt-desc fw-med post__hero-label">Services</div>
                            <div class="post__hero-service-listing">
                                {post.services.map((service) => <p class="cl-txt-sub">{service.title}</p>)}
                            </div>
                        </div>
                        <div class="post__hero-selling">
                            <div class="cl-txt-desc fw-med post__hero-label">Selling points</div>
                            <div class="post__hero-selling-listing">
                                {post.sellingPoints.map((point) => <p class="cl-txt-sub">{point.title}</p>)}
                            </div>
                        </div>
                    </div>
                    <div class="post__hero-bottom">
                        <p class="fs-20 fw-med cl-txt-sub post__hero-year">Â© 2020</p>
                        <p class="upper cl-txt-title post__hero-cta">(Scroll down)</p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="sc-post__main">
        <div class="post__main">
            <div class="post__intro">
                <div class="container grid">
                    <p class="upper post__intro-label">(Intro)</p>
                    <div class="heading h4 fw-thin cl-txt-title post__intro-content">

                        <TextBlurFading
                            triggerOpts = {{
                                start: 'top bottom-=10%',
                                end: 'bottom center+=10%'
                            }}
                            client:visible={{ rootMargin: "100% 0% 100% 0%" }}
                            >
                            <BreakMutipleLine text={post.excerpt}/>
                        </TextBlurFading>
                    </div>
                    <a href={"#"} class="cl-txt-orange arrow-hover post__intro-link">
                        <span class="txt-link hover-un">Visit</span>
                        <Arrows slot="arrows" />
                    </a>
                </div>
            </div>
            <div class="post__content">
                <div class="container grid">
                    <div class="post__content-toc">
                        <TOC client:visible={{ rootMargin: "100% 0% 100% 0%" }}>
                    </div>
                    <div class="post__content-richtext">
                        <span class="line"></span>
                        <div class="richtext-global post__content-richtext-inner">
                            <slot />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</di>
<style lang="scss" is:global>
    @use '~/assets/styles/mixins' as *;
    .post-wrapper {}
    .post {
        &__hero {
            position: relative;
            z-index: 3;
            background-color: var(--cl-dm-bg);
            height: 100vh;
            width: 100%;
            &-cover {
                position: absolute;
                inset: 0;
                z-index: 2;
                &-img {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    img {
                        object-position: top center !important;
                    }

                    @include size(100%);
                }
                &-blur {
                    @include size(100%);
                }
            }
            &-main {
                position: relative;
                z-index: 3;
                height: 100%;
                > .container {
                    height: 100%;
                }
            }
            &-title {
                grid-column: 1/9;
                grid-row: 1/3;
                align-self: end;
                padding-bottom: 7.6vh;
            }
            &-info {
                padding-top: 17.14vh;

                grid-column: 13/16;
                max-width: 28.5rem;

                display: flex;
                flex-direction: column;
                justify-content: start;
                gap: 7.4rem 0;
            }
            &-label {
                margin-bottom: 1rem;
            }
            &-bottom {
                grid-column: 13/17;
                align-self: end;
                padding-bottom: 9.2vh;
                display: flex;
                justify-content: space-between;
                align-items: baseline;
            }
        }
        &__main {
            padding-top: 14.5rem;
        }
        &__intro {
            &-label {
                grid-column: 1/2;
                grid-row: 1/2;
            }
            &-content {
                grid-column: 5/15;
                max-width: 99.7rem;
            }
            &-link {
                display: flex;
                align-items: center;
                column-gap: .6rem;
                grid-column: 1/2;
                grid-row: 1/2;
                align-self: end;
            }
        }
        &__content {
            &-toc {
                grid-column: 1/4;
                &-inner {
                    position: sticky;
                    max-height: calc(100vh - 15rem);
                    top: 15rem;
                    overflow: hidden;
                    display: flex;
                    flex-direction: column;
                    padding-bottom: 7.5vh;
                }
                &-title {
                    margin-bottom: 1.2rem;
                }
                &-listing {
                    display: flex;
                    flex-direction: column;
                    gap: 1.2rem 0;
                    list-style-type: none;
                    overflow-y: auto;
                    overflow-x: hidden;
                    padding-block: 3rem;
                    margin-block: -3rem;
                    mask-image: linear-gradient(transparent, #fff 3.2rem,#fff calc(100% - 4rem), transparent);
                    -webkit-mask-image: linear-gradient(transparent, #fff 3.2rem,#fff calc(100% - 4rem), transparent);
                    @include custom-scroll(.3rem, transparent, var(--cl-orange));
                }
                &-item {
                    position: relative;
                    padding-left: 1.6rem;
                    transition: color 0.4s ease-in-out;
                    cursor: pointer;
                    &:before {
                        content: '';
                        position: absolute;
                        @include size(.8rem);
                        border-radius: 50%;
                        background-color: currentColor;
                        left: 0;
                        top: .35em;
                        transition: background-color 0.4s ease-in-out;
                    }
                    &:hover,
                    &.active {
                        color: var(--cl-dm-title);
                        &:before {
                            background-color: var(--cl-orange);
                        }
                    }
                }
            }
            &-richtext {
                grid-column: 5/15;
                max-width: 99.7rem;
                position: relative;

                padding-block: 12rem;
                h2 {
                    @include text(h4);
                }
                .line {
                    position: absolute;
                    top: 0;
                }
            }
        }
    }
</style>;